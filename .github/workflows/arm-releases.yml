name: Build Releases for ARM Linux

on:
  push:
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Cross-compile on ARM Linux
    runs-on: ubuntu-latest

    env:
      CC: ${{ matrix.config.apt_target }}-gcc
      RUSTFLAGS: -Clinker=${{ matrix.config.apt_target }}-gcc

    strategy:
      fail-fast: false
      matrix:
        config:
        - rust_target: aarch64-unknown-linux-gnu
          apt_target: aarch64-linux-gnu
        - rust_target: armv7-unknown-linux-gnueabi
          apt_target: arm-linux-gnueabi

    steps:
    - name: Checkout source
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install dependencies
      run: |
        sudo apt install gcc-${{ matrix.config.apt_target }} binutils-${{ matrix.config.apt_target }}
        rustup target add ${{ matrix.config.rust_target }}
    - name: Rust Cache
      uses: Swatinem/rust-cache@v1

    - name: Build release
      run: |
        cargo build --release --target ${{ matrix.config.rust_target }}
    - name: Remove interferring files
      run: bash -c "rm -rf target/${{ matrix.config.rust_target }}/release/rusty-penguin.*"

    - name: Upload binary
      uses: actions/upload-artifact@v2.2.4
      with:
        name: penguin-${{ matrix.config.rust_target }}
        path: target/${{ matrix.config.rust_target }}/release/rusty-penguin*
