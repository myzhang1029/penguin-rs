name: Rust Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - name: Intel macOS
          os: macos-latest
        - name: Linux
          os: ubuntu-latest
        - name: Windows
          os: windows-latest
        tls:
        - nativetls
        - rustls-native-roots
        - rustls-webpki-roots

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install nasm on Windows for aws-lc-sys (Taken from rustls)
      if: matrix.config.name == 'Windows'
      uses: ilammy/setup-nasm@v1

    - name: Install Rust toolchain
      run:
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --component llvm-tools-preview

    - name: Install grcov
      run: cargo install grcov

    - name: Set up Go for Pebble
      uses: actions/setup-go@v5
      with:
        go-version: '>=1.20.0'
        cache: false

    - name: Install and run pebble
      run: .github/workflows/pebble.sh

    - name: Check if program builds
      run: cargo run --verbose --features ${{ matrix.tls }},penguin-binary --no-default-features -- --help

    - name: Run cargo tests with more features on
      run: cargo test --verbose --features ${{ matrix.tls }},tests-real-internet4,tests-acme-has-pebble,penguin-binary,acme,default-is-ipv6,tokio-console,deadlock-detection --no-default-features
      env:
        RUSTFLAGS: -Cinstrument-coverage

    - name: Run cargo tests with default features
      run: cargo test --verbose --features ${{ matrix.tls }},tests-real-internet4,acme,penguin-binary --no-default-features
      env:
        RUSTFLAGS: -Cinstrument-coverage

    - name: Process coverage data
      run: grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info

    - uses: codecov/codecov-action@v4
      with:
        files: ./lcov.info
        token: ${{ secrets.CODECOV_TOKEN }}
