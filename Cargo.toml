[package]
name = "rusty-penguin"
version = "0.5.5"
authors = ["Zhang Maiyun <me@maiyun.me>"]
edition = "2021"
# Lib is 1.65.0. Note that I do not consider raising MSRV a breaking change.
rust-version = "1.74.1"
description = "A fast TCP/UDP tunnel, transported over HTTP WebSocket"
readme = "README.md"
repository = "https://github.com/myzhang1029/penguin-rs"
license = "Apache-2.0 OR GPL-3.0-or-later"
keywords = ["cli", "web", "websocket"]
categories = ["asynchronous", "command-line-utilities", "network-programming"]

[[bin]]
name = "penguin"
path = "src/main.rs"
required-features = ["penguin-binary"]

[lib]
name = "penguin_mux"
path = "src/mux/lib.rs"

[dependencies]
arc-swap = { version = "1", optional = true }
base64 = { version = "0.22", optional = true }
bytes = "1"
clap = { version = "4", features = ["cargo", "derive"], optional = true }
console-subscriber = { version = "0.4", optional = true }
futures-util = { version = "0.3", default-features = false }
http = "1"
http-body-util = { version = "0.1", optional = true }
hyper = { version = "1", features = ["server", "http1", "http2"], optional = true }
hyper-util = { version = "0.1", features = ["server", "server-auto", "tokio"], optional = true }
instant-acme = { version = "0.7", features = ["ring", "hyper-rustls"], default-features = false, optional = true }
parking_lot = "0.12"
rand = "0.9"
rcgen = { version = "0.13", optional = true }
reqwest = { version = "0.12", optional = true, default-features = false }
rustls = { version = "^0.23, >=0.23.18", features = ["logging", "ring", "tls12"], default-features = false, optional = true }
rustls-native-certs = { version = "0.8", optional = true }
rustls-pemfile = { version = "2", optional = true }
sha1 = { version = "0.10", optional = true }
thiserror = "2"
tokio = { version = "^1, >=1.23.1", features = ["macros", "parking_lot", "rt", "sync", "time"] }
tokio-native-tls = { version = "0.3", optional = true }
tokio-rustls = { version = "0.26", features = ["logging", "ring", "tls12"], default-features = false, optional = true }
tokio-tungstenite = { version = "0.26", default-features = false }
tracing = { version = "0.1", features = ["max_level_trace", "release_max_level_debug"] }
tracing-subscriber = { version = "0.3", optional = true }
webpki-roots = { version = "0.26", optional = true }

[dev-dependencies]
temp-env = "0.3"
tempfile = "3"
tracing-subscriber = "0.3"
rcgen = "0.13"

[features]
default = ["rustls-native-roots", "tests-real-internet4", "penguin-binary", "acme"]
# Note that it does not make sense to use more than one TLS implementations
# at the same time, but there must be at least one if `penguin-binary` is
# enabled.
rustls-webpki-roots = ["webpki-roots", "tokio-tungstenite/rustls-tls-webpki-roots", "reqwest/rustls-tls-webpki-roots", "__rustls"]
rustls-native-roots = ["rustls-native-certs", "tokio-tungstenite/rustls-tls-native-roots", "reqwest/rustls-tls-native-roots", "__rustls"]
__rustls = ["rustls", "rustls-pemfile", "tokio-rustls"]
nativetls = ["tokio-native-tls", "tokio-tungstenite/native-tls", "reqwest/native-tls"]
# Allow some tests that require real internet connection
tests-real-internet4 = []
tests-real-internet6 = []
# Set the default localhost or unspecified address to IPv6
default-is-ipv6 = []
# Enabling this causes `penguin` to listen for `tokio-console` connections
tokio-console = ["console-subscriber"]
# `parking_lot`'s deadlock detection in a separate thread
deadlock-detection = ["parking_lot/deadlock_detection"]
# obtaining certificate automatically using ACME protocol
acme = ["penguin-binary", "instant-acme", "rcgen", "tokio/process"]
# `penguin` binary
penguin-binary = [
    "arc-swap",
    "base64",
    "clap",
    "http-body-util",
    "hyper",
    "hyper-util",
    "reqwest",
    "sha1",
    "tracing-subscriber",
    "tokio/fs", "tokio/io-std", "tokio/net", "tokio/rt-multi-thread", "tokio/signal",
    "tokio-tungstenite/default",
]

[profile.release]
debug = true
